pipeline {
  agent any

  environment {
    DOCKER_REGISTRY = 'elitesolutionsit'
    DOCKER_REPO = 'react-shopping-app'
    DOCKER_TAG = 'v1'
    TARGET_HOST = '3.239.175.39'
    HOST_NAME = 'webserver'
    REMOTE_USER = 'ubuntu'
    PLAYBOOK_PATH = 'devops-automation/playbook/'
    SSH_PRIVATE_KEY = "${credentials('ssh-login')}"
  }

  stages {
    stage('git clone') {
        steps {
            script {
                git branch: 'main', credentialsId: 'github-login', url: 'https://github.com/arerepadelouisbenagha/devops-automation.git'
            }
        }
    }
    stage('Copy playbook to target server') {
        steps {
            withCredentials([sshUserPrivateKey(credentialsId: 'ssh-login', keyFileVariable: 'SSH_PRIVATE_KEY', passphraseVariable: '', usernameVariable: 'ubuntu')]) {
                script {
                    sh """
                    cd playbook/ && sudo cp shopping-app.yml /etc/ansible
                    """
                }
            }
        }
    }
    stage('Add to Ansible inventory') {
        steps {
                sh '''
                # Get the hostname and IP address of the machine
                HOSTNAME=$(hostname)
                IPADDR=$(hostname -I | awk '{print $1}')
                
                # Append the machine information to the bottom of the Ansible inventory file
                sudo sh -c "echo -e '\n[$HOSTNAME]\n$HOSTNAME ansible_host=$IPADDR' >> /etc/ansible/hosts"
                '''
        }
    }
    stage('Build Docker image') {
    steps {
        script {
            sh """
            cd shopping-app/
            sudo docker build -t ${DOCKER_REGISTRY}/${DOCKER_REPO}:${DOCKER_TAG} .
            """
            }
        }
    }
    stage('Docker Login') {
        steps {
            script {
                withCredentials([usernamePassword(credentialsId: 'docker-login', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sh "echo '${DOCKER_PASSWORD}' | sudo docker login -u '${DOCKER_USERNAME}' --password-stdin"
                    echo 'Successfully logged into Docker Hub'
                }
            }
        }
    }
    stage('Push Docker image') {
        steps {
            script {
                sh """
                sudo docker push ${DOCKER_REGISTRY}/${DOCKER_REPO}:${DOCKER_TAG}
                """
            }
        }
    }
    stage('Deploy Docker image with Ansible') {
        steps {
            script {
                ansiblePlaybook credentialsId: 'ssh-login', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/etc/ansible/shopping-app.yml'
            }
          }
      }
    }
}
